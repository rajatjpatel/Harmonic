Elliot Wave Patterns

Ralph Nelson Elliott, authored his book on Elliott wave theory titled "The Wave Principle" in 1938. In this book, Elliott presented his theory of market behaviour, which he believed reflected the natural laws that govern human behaviour.

The Elliott Wave Theory is based on the principle that waves have a tendency to unfold in a specific sequence of five waves in the direction of the trend, followed by three waves leading in the opposite direction. This pattern is called a 5-3 wave pattern and is the foundation of Elliott's theory.

The five waves in the direction of the trend are labelled 1, 2, 3, 4, and 5, while the three waves in the opposite direction are labelled A, B, and C. Waves 1, 3, and 5 are impulse waves, while waves 2 and 4 are corrective waves. Waves A and C are also corrective waves, while wave B is an impulse wave.

According to Elliott, the pattern of waves is fractal in nature, meaning that it occurs on all time frames, from the smallest to the largest.

In Elliott Wave Theory, the distance that waves move from each other depends on the specific market conditions and the amplitude of the waves involved. 
There is no fixed rule or limit for how far waves should move from each other, however, 
there are several guidelines to help identify and measure wave distances. 
One of the most common guidelines is the Fibonacci ratios, which can be used to describe the relationships between wave lengths.
For example, Elliott identified that wave 3 is typically the strongest and longest wave, and it tends to be 1.618 times the length of wave 1. Meanwhile, wave 2 tends to retrace between 50% and 78.6% of wave 1, and wave 4 tends to retrace between 38.2% and 78.6% of wave 3
############################################################################
//@version=5


indicator('Descending Elliot Wave Patterns', overlay = true, max_lines_count = 500, max_labels_count = 320)

shPrice = close[1] >= open[1] and close < open and high >= high[1] and barstate.isconfirmed ? high : 
 close[1] >= open[1] and close < open and high <= high[1] and barstate.isconfirmed ? high[1] : na
shPriceBarIndex = close[1] >= open[1] and close < open and high >= high[1] and barstate.isconfirmed ? bar_index : 
 close[1] >= open[1] and close < open and high <= high[1] and barstate.isconfirmed ? bar_index - 1 : na
peak = ta.valuewhen(shPrice, shPrice, 0)
peakBarIndex = ta.valuewhen(shPrice, shPriceBarIndex, 0)
shPriceOne = ta.valuewhen(shPrice, shPrice, 1)
shPriceBarIndexOne = ta.valuewhen(shPriceBarIndex, shPriceBarIndex, 1)
shPriceTwo = ta.valuewhen(shPrice, shPrice, 2)
shPriceBarIndexTwo = ta.valuewhen(shPriceBarIndex, shPriceBarIndex, 2)
shPriceThree = ta.valuewhen(shPrice, shPrice, 3)
shPriceBarIndexThree = ta.valuewhen(shPriceBarIndex, shPriceBarIndex, 3)

slPrice = close[1] < open[1] and close >= open and low <= low[1] and barstate.isconfirmed ? low : 
 close[1] < open[1] and close >= open and low >= low[1] and barstate.isconfirmed ? low[1] : na
slPriceBarIndex = close[1] < open[1] and close >= open and low <= low[1] and barstate.isconfirmed ? bar_index : 
 close[1] < open[1] and close >= open and low >= low[1] and barstate.isconfirmed ? bar_index - 1 : na
trough = ta.valuewhen(slPrice, slPrice, 0)
troughBarIndex = ta.valuewhen(slPrice, slPriceBarIndex, 0)
slPriceOne = ta.valuewhen(slPrice, slPrice, 1)
slPriceBarIndexOne = ta.valuewhen(slPriceBarIndex, slPriceBarIndex, 1)
slPriceTwo = ta.valuewhen(slPrice, slPrice, 2)
slPriceBarIndexTwo = ta.valuewhen(slPriceBarIndex, slPriceBarIndex, 2)
slPriceThree = ta.valuewhen(slPrice, slPrice, 3)
slPriceBarIndexThree = ta.valuewhen(slPriceBarIndex, slPriceBarIndex, 3)

onePartUptrend = slPrice  > ta.valuewhen(slPrice, slPrice, 1) 
twoPartUptrend = onePartUptrend and ta.valuewhen(slPrice, slPrice, 1) > ta.valuewhen(slPrice, slPrice, 2) 

onePartTroughPeakDoubleDowntrend = ta.valuewhen(shPrice, shPrice, 0) < ta.valuewhen(shPrice, shPrice, 1) and ta.valuewhen(slPrice, slPrice, 0) < ta.valuewhen(slPrice, slPrice, 1)
twoPartTroughPeakDoubleDowntrend = ta.valuewhen(shPrice, shPrice, 0) < ta.valuewhen(shPrice, shPrice, 1) and ta.valuewhen(shPrice, shPrice, 1) < ta.valuewhen(shPrice, shPrice, 2) 
 and ta.valuewhen(slPrice, slPrice, 0) < ta.valuewhen(slPrice, slPrice, 1) and ta.valuewhen(slPrice, slPrice, 1) < ta.valuewhen(slPrice, slPrice, 2)
threePartTroughPeakDoubleDowntrend = ta.valuewhen(shPrice, shPrice, 0) < ta.valuewhen(shPrice, shPrice, 1) and ta.valuewhen(shPrice, shPrice, 1) < ta.valuewhen(shPrice, shPrice, 2) 
 and ta.valuewhen(shPrice, shPrice, 2) < ta.valuewhen(shPrice, shPrice, 3) and ta.valuewhen(slPrice, slPrice, 0) < ta.valuewhen(slPrice, slPrice, 1) 
 and ta.valuewhen(slPrice, slPrice, 1) < ta.valuewhen(slPrice, slPrice, 2) and ta.valuewhen(slPrice, slPrice, 2) < ta.valuewhen(slPrice, slPrice, 3)
fourPartTroughPeakDoubleDowntrend = ta.valuewhen(shPrice, shPrice, 0) < ta.valuewhen(shPrice, shPrice, 1) and ta.valuewhen(shPrice, shPrice, 1) < ta.valuewhen(shPrice, shPrice, 2) 
 and ta.valuewhen(shPrice, shPrice, 2) < ta.valuewhen(shPrice, shPrice, 3) and ta.valuewhen(shPrice, shPrice, 3) < ta.valuewhen(shPrice, shPrice, 4) 
 and ta.valuewhen(slPrice, slPrice, 0) < ta.valuewhen(slPrice, slPrice, 1) and ta.valuewhen(slPrice, slPrice, 1) < ta.valuewhen(slPrice, slPrice, 2) 
 and ta.valuewhen(slPrice, slPrice, 2) < ta.valuewhen(slPrice, slPrice, 3) and ta.valuewhen(slPrice, slPrice, 3) < ta.valuewhen(slPrice, slPrice, 4)

descendingElliotWave = slPrice and onePartUptrend and not twoPartUptrend and threePartTroughPeakDoubleDowntrend[1] and not fourPartTroughPeakDoubleDowntrend[1]

slRangeRatio = (peak - trough) / (peak - trough[1]) * 100
shRangeRatio = (peak - trough) / (peak[1] - trough) * 100

slRangeRatioZero = ta.valuewhen(slPrice, slRangeRatio, 0)
slRangeRatioOne = ta.valuewhen(slPrice, slRangeRatio, 1)
slRangeRatioTwo = ta.valuewhen(slPrice, slRangeRatio, 2)
slRangeRatioThree = ta.valuewhen(slPrice, slRangeRatio, 3)

shRangeRatioZero = ta.valuewhen(shPrice, shRangeRatio, 0)
shRangeRatioOne = ta.valuewhen(shPrice, shRangeRatio, 1)
shRangeRatioTwo = ta.valuewhen(shPrice, shRangeRatio, 2)
shRangeRatioThree = ta.valuewhen(shPrice, shRangeRatio, 3)

showProjections = input(defval = true, title = 'Show Projections', group = 'Lines')

patternColor = input(defval = color.blue, title = 'Pattern Color', group = 'Line Coloring')

labelColor = input(defval = color.blue, title = 'Label Color', group = 'Label Coloring')

selectProjectionExtend = input.string(title = 'Extend Current Projection Lines', defval = 'None', options = ['None', 'Right', 'Left', 'Both'], group = "Line Extension")
extendProjectionLines = selectProjectionExtend == 'None' ? extend.none : selectProjectionExtend == 'Right' ? extend.right : 
 selectProjectionExtend == 'Left' ? extend.left : selectProjectionExtend == 'Both' ? extend.both : na

var currentPatternPeak = line.new(na, na, na, na, extend = extendProjectionLines, color = color.green, style = line.style_dashed)
var currentPatternTrough = line.new(na, na, na, na, extend = extendProjectionLines, color = color.red, style = line.style_dashed)
var currentPatternUpperProjection = line.new(na, na, na, na, extend = extendProjectionLines, color = color.green, style = line.style_dashed)
var currentPatternLowerProjection = line.new(na, na, na, na, extend = extendProjectionLines, color = color.red, style = line.style_dashed)

if descendingElliotWave 
    lineOne = line.new(shPriceBarIndexThree, shPriceThree, slPriceBarIndexThree, slPriceThree, color = patternColor, width = 2)
    lineTwo = line.new(slPriceBarIndexThree, slPriceThree, shPriceBarIndexTwo, shPriceTwo, color = patternColor, width = 2)
    lineThree = line.new(shPriceBarIndexTwo, shPriceTwo,slPriceBarIndexTwo,slPriceTwo, color = patternColor, width = 2)
    lineFour = line.new(slPriceBarIndexTwo, slPriceTwo, shPriceBarIndexOne, shPriceOne, color = patternColor, width = 2)
    lineFive = line.new(shPriceBarIndexOne, shPriceOne, slPriceBarIndexOne, slPriceOne, color = patternColor, width = 2)
    lineSix = line.new(slPriceBarIndexOne, slPriceOne, peakBarIndex, peak, color = patternColor, width = 2)
    lineSeven = line.new(peakBarIndex, peak, slPriceBarIndex, slPrice, color = patternColor, width = 2)
    labelOne = label.new(slPriceBarIndexThree, slPriceThree, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = '1 (' + str.tostring(math.round(slRangeRatioThree, 2)) + ')', textcolor = labelColor)
    labelTwo = label.new(shPriceBarIndexTwo, shPriceTwo, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = '2 (' + str.tostring(math.round(shRangeRatioTwo, 2)) + ')', textcolor = labelColor)
    labelThree = label.new(slPriceBarIndexTwo, slPriceTwo, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = '3 (' + str.tostring(math.round(slRangeRatioTwo, 2)) + ')', textcolor = labelColor)
    labelFour = label.new(shPriceBarIndexOne, shPriceOne, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = '4 (' + str.tostring(math.round(shRangeRatioOne, 2)) + ')', textcolor = labelColor)
    labelFive = label.new(slPriceBarIndexOne, slPriceOne, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = '5 (' + str.tostring(math.round(slRangeRatioOne, 2)) + ')', textcolor = labelColor)
    labelSix = label.new(peakBarIndex, peak, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = 'A (' + str.tostring(math.round(shRangeRatioZero, 2)) + ')', textcolor = labelColor)
    labelSeven = label.new(slPriceBarIndex, trough, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = 'B (' + str.tostring(math.round(slRangeRatio, 2)) + ')', textcolor = labelColor)
    patternPeak = line.new(showProjections ? peakBarIndex : na, showProjections ? peak : na, showProjections ? bar_index : na, 
     showProjections ? peak : na, color = color.green, style = line.style_dashed)
    patternTrough = line.new(showProjections ? peakBarIndex : na, showProjections ? trough : na, showProjections ? bar_index : na, 
     showProjections ? trough : na, color = color.red, style = line.style_dashed)
    patternLowerProjection = line.new(showProjections ? peakBarIndex : na, showProjections ? slPriceOne : na, showProjections ? bar_index : na, 
     showProjections ? slPriceOne : na, color = color.red, style = line.style_dashed)
    patternUpperProjection = line.new(showProjections ? peakBarIndex : na, showProjections ? peak + (shPriceThree - slPriceThree) : na, showProjections ? bar_index : na, 
     showProjections ? peak + (shPriceThree - slPriceThree) : na, color = color.green, style = line.style_dashed)
    var myLineArray = array.new_line()
    array.push(myLineArray, lineOne) 
    array.push(myLineArray, lineTwo) 
    array.push(myLineArray, lineThree) 
    array.push(myLineArray, lineFour)
    array.push(myLineArray, lineFive) 
    array.push(myLineArray, lineSix)
    array.push(myLineArray, lineSeven)
    array.push(myLineArray, patternPeak)
    array.push(myLineArray, patternTrough) 
    array.push(myLineArray, patternUpperProjection)
    array.push(myLineArray, patternLowerProjection)
    if array.size(myLineArray) >= 500
        firstLine = array.remove(myLineArray, 0) 
        line.delete(firstLine)
    var myLabelArray = array.new_label()
    array.push(myLabelArray, labelOne) 
    array.push(myLabelArray, labelTwo)
    array.push(myLabelArray, labelThree)
    array.push(myLabelArray, labelFour)
    array.push(myLabelArray, labelFive)
    array.push(myLabelArray, labelSix)
    array.push(myLabelArray, labelSeven)
    if array.size(myLabelArray) >= 320
        firstLabel = array.remove(myLabelArray, 0) 
        label.delete(firstLabel)

if descendingElliotWave  
    line.set_xy1(currentPatternPeak, showProjections ? peakBarIndex : na, showProjections ? peak : na)
    line.set_xy2(currentPatternPeak, showProjections ? bar_index : na, showProjections ? peak : na)
    line.set_xy1(currentPatternTrough, showProjections ? peakBarIndex : na, showProjections ? trough : na)
    line.set_xy2(currentPatternTrough, showProjections ? bar_index : na, showProjections ? trough : na)
    line.set_xy1(currentPatternUpperProjection, showProjections ? peakBarIndex : na, showProjections ? peak + (shPriceThree - slPriceThree) : na)
    line.set_xy2(currentPatternUpperProjection, showProjections ? bar_index : na, showProjections ? peak + (shPriceThree - slPriceThree) : na)
    line.set_xy1(currentPatternLowerProjection, showProjections ? peakBarIndex : na, showProjections ? slPriceOne : na)
    line.set_xy2(currentPatternLowerProjection, showProjections ? bar_index : na, showProjections ? slPriceOne : na)
    alert('Descending Elliot Wave')
   
