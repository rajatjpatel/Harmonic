Bullish and Bearish Three-Drive Patterns

• Bullish three-drive patterns are fundamentally composed of three peaks and three troughs, with the second peak being lower than the first peak and the third peak being lower than the second peak. And similarly, the second trough being lower than the first trough and the third trough being lower than the second trough.
• Bearish three-drive patterns are fundamentally composed of three troughs and three peaks, with the second trough being higher than the first trough and the third trough being higher than the second troughs. And similarly, the second peak being higher than the first peak and the third peak being higher than the second peak.

The most commonly recognised ratio measurements used by traders today are as follows:

• Wave 1 of the pattern, referred to as X1, should extend to at least 127.2% of the preceding range.
• Wave 2 of the pattern, referred to as 1A, should retrace to 61.8% of the range set by wave 1.
• Wave 3 of the pattern, referred to as drive A2, should extend to at least 127.2%, but no further than 161.8% of the range set by wave 2.
• Wave 4 of the pattern, referred to drive 2B, should retrace to 61.8% of the range set by wave 3.
• Wave 5, generally referred to as drive B3, should extend to at least 127.2%, but no further than 161.8% of the range set by wave 4.
#####################################################################################################################################################

//@version=5


indicator('Bearish Three-Drive Harmonic Patterns', overlay = true, max_lines_count = 500, max_labels_count = 250)

shPrice = close[1] >= open[1] and close < open and high >= high[1] and barstate.isconfirmed ? high : 
 close[1] >= open[1] and close < open and high <= high[1] and barstate.isconfirmed ? high[1] : na
shPriceBarIndex = close[1] >= open[1] and close < open and high >= high[1] and barstate.isconfirmed ? bar_index : 
 close[1] >= open[1] and close < open and high <= high[1] and barstate.isconfirmed ? bar_index - 1 : na
peak = ta.valuewhen(shPrice, shPrice, 0)
peakBarIndex = ta.valuewhen(shPrice, shPriceBarIndex, 0)
shPriceOne = ta.valuewhen(shPrice, shPrice, 1)
shPriceBarIndexOne = ta.valuewhen(shPriceBarIndex, shPriceBarIndex, 1)
shPriceTwo = ta.valuewhen(shPrice, shPrice, 2)
shPriceBarIndexTwo = ta.valuewhen(shPriceBarIndex, shPriceBarIndex, 2)

slPrice = close[1] < open[1] and close >= open and low <= low[1] and barstate.isconfirmed ? low : 
 close[1] < open[1] and close >= open and low >= low[1] and barstate.isconfirmed ? low[1] : na
slPriceBarIndex = close[1] < open[1] and close >= open and low <= low[1] and barstate.isconfirmed ? bar_index : 
 close[1] < open[1] and close >= open and low >= low[1] and barstate.isconfirmed ? bar_index - 1 : na
trough = ta.valuewhen(slPrice, slPrice, 0)
troughBarIndex = ta.valuewhen(slPrice, slPriceBarIndex, 0)
slPriceOne = ta.valuewhen(slPrice, slPrice, 1)
slPriceBarIndexOne = ta.valuewhen(slPriceBarIndex, slPriceBarIndex, 1)
slPriceTwo = ta.valuewhen(slPrice, slPrice, 2)
slPriceBarIndexTwo = ta.valuewhen(slPriceBarIndex, slPriceBarIndex, 2)

returnLineUptrend = ta.valuewhen(shPrice, shPrice, 0) > ta.valuewhen(shPrice, shPrice, 1)
uptrend = ta.valuewhen(slPrice, slPrice, 0) > ta.valuewhen(slPrice, slPrice, 1)
downtrend = ta.valuewhen(shPrice, shPrice, 0) < ta.valuewhen(shPrice, shPrice, 1)
returnLineDowntrend = ta.valuewhen(slPrice, slPrice, 0) < ta.valuewhen(slPrice, slPrice, 1)

onePartPeakTroughDoubleUptrend = ta.valuewhen(slPrice, slPrice, 0) > ta.valuewhen(slPrice, slPrice, 1) and ta.valuewhen(shPrice, shPrice, 0) > ta.valuewhen(shPrice, shPrice, 1)
twoPartPeakTroughDoubleUptrend = ta.valuewhen(slPrice, slPrice, 0) > ta.valuewhen(slPrice, slPrice, 1) and ta.valuewhen(slPrice, slPrice, 1) > ta.valuewhen(slPrice, slPrice, 2) 
 and ta.valuewhen(shPrice, shPrice, 0) > ta.valuewhen(shPrice, shPrice, 1) and ta.valuewhen(shPrice, shPrice, 1) > ta.valuewhen(shPrice, shPrice, 2)

slRangeRatio = (peak - trough) / (peak - trough[1]) * 100
shRangeRatio = (peak - trough) / (peak[1] - trough) * 100

slRangeRatioZero = ta.valuewhen(slPrice, slRangeRatio, 0)
slRangeRatioOne = ta.valuewhen(slPrice, slRangeRatio, 1)
slRangeRatioTwo = ta.valuewhen(slPrice, slRangeRatio, 2)

shRangeRatioZero = ta.valuewhen(shPrice, shRangeRatio, 0)
shRangeRatioOne = ta.valuewhen(shPrice, shRangeRatio, 1)
shRangeRatioTwo = ta.valuewhen(shPrice, shRangeRatio, 2)

x1LowerTolerance = input(defval = 20, title = 'X1 Lower Tolerance (%)', group = 'Tolerances')
lowerTolerance1a = input(defval = 20, title = '1A Lower Tolerance (%)', group = 'Tolerances')
upperTolerance1a = input(defval = 20, title = '1A Upper Tolerance (%)', group = 'Tolerances')
a2LowerTolerance = input(defval = 20, title = 'A2 Lower Tolerance (%)', group = 'Tolerances')
a2UpperTolerance = input(defval = 20, title = 'A2 Upper Tolerance (%)', group = 'Tolerances')
lowerTolerance2b = input(defval = 20, title = '2B Lower Tolerance (%)', group = 'Tolerances')
upperTolerance2b = input(defval = 20, title = '2B Upper Tolerance (%)', group = 'Tolerances')
b3LowerTolerance = input(defval = 20, title = 'B3 Lower Tolerance (%)', group = 'Tolerances')
b3UpperTolerance = input(defval = 20, title = 'B3 Upper Tolerance (%)', group = 'Tolerances')

bearishThreeDrive = shPrice and returnLineUptrend and twoPartPeakTroughDoubleUptrend
 and shRangeRatioTwo >= 127.2 - x1LowerTolerance 
 and slRangeRatioOne >= 61.8 - lowerTolerance1a and slRangeRatioOne <= 61.8 + upperTolerance1a
 and shRangeRatioOne >= 127.2 - a2LowerTolerance and shRangeRatioOne <= 161.8 + a2UpperTolerance
 and slRangeRatioZero >= 61.8 - lowerTolerance2b and slRangeRatioZero <= 61.8 + upperTolerance2b
 and shRangeRatio >= 127.2 - b3LowerTolerance and shRangeRatio <= 161.8 + b3UpperTolerance

patternColor = input(defval = color.blue, title = 'Pattern Color', group = 'Line Coloring')

labelColor = input(defval = color.blue, title = 'Label Color', group = 'Label Coloring')

showProjections = input(defval = true, title = 'Show Projections', group = 'Lines')

selectProjectionExtend = input.string(title = 'Extend Current Projection Lines', defval = 'None', options = ['None', 'Right', 'Left', 'Both'], group = "Line Extension")
extendProjectionLines = selectProjectionExtend == 'None' ? extend.none : selectProjectionExtend == 'Right' ? extend.right : 
 selectProjectionExtend == 'Left' ? extend.left : selectProjectionExtend == 'Both' ? extend.both : na

var currentPatternPeak = line.new(na, na, na, na, extend = extendProjectionLines, color = color.green, style = line.style_dashed)
var currentPatternTrough = line.new(na, na, na, na, extend = extendProjectionLines, color = color.red, style = line.style_dashed)
var currentPatternUpperProjection = line.new(na, na, na, na, extend = extendProjectionLines, color = color.green, style = line.style_dashed)
var currentPatternLowerProjection = line.new(na, na, na, na, extend = extendProjectionLines, color = color.red, style = line.style_dashed)

if bearishThreeDrive 
    lineOne = line.new(slPriceBarIndexTwo, slPriceTwo, shPriceBarIndexTwo, shPriceTwo, color = patternColor, width = 2)
    lineTwo = line.new(shPriceBarIndexTwo, shPriceTwo, slPriceBarIndexOne, slPriceOne, color = patternColor, width = 2)
    lineThree = line.new(slPriceBarIndexOne, slPriceOne, shPriceBarIndexOne, shPriceOne, color = patternColor, width = 2)
    lineFour = line.new(shPriceBarIndexOne, shPriceOne, troughBarIndex, trough, color = patternColor, width = 2)
    lineFive = line.new(troughBarIndex, trough, shPriceBarIndex, shPrice, color = patternColor, width = 2)
    lineSix = line.new(slPriceBarIndexTwo, slPriceTwo, slPriceBarIndexOne, slPriceOne, color = patternColor, style = line.style_dashed)
    lineSeven = line.new(shPriceBarIndexTwo, shPriceTwo, shPriceBarIndexOne, shPriceOne, color = patternColor, style = line.style_dashed)
    lineEight = line.new(shPriceBarIndexOne, shPriceOne, shPriceBarIndex, shPrice, color = patternColor, style = line.style_dashed)
    lineNine = line.new(slPriceBarIndexOne, slPriceOne, troughBarIndex, trough, color = patternColor, style = line.style_dashed)
    labelOne = label.new(slPriceBarIndexTwo, slPriceTwo, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = 'X', textcolor = labelColor)
    labelTwo = label.new(shPriceBarIndexTwo, shPriceTwo, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = '1 (' + str.tostring(math.round(shRangeRatioTwo, 2)) + ')', textcolor = labelColor)
    labelThree = label.new(slPriceBarIndexOne, slPriceOne, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = 'A (' + str.tostring(math.round(slRangeRatioOne, 2)) + ')', textcolor = labelColor)
    labelFour = label.new(shPriceBarIndexOne, shPriceOne, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = '2 (' + str.tostring(math.round(shRangeRatioOne, 2)) + ')', textcolor = labelColor)
    labelFive = label.new(troughBarIndex, trough, color = color.rgb(54, 58, 69, 100), style = label.style_label_up,
     text = 'B (' + str.tostring(math.round(slRangeRatioZero, 2)) + ')', textcolor = labelColor)
    labelSix = label.new(shPriceBarIndex, shPrice, color = color.rgb(54, 58, 69, 100), style = label.style_label_down,
     text = '3 (' + str.tostring(math.round(shRangeRatio, 2)) + ')', textcolor = labelColor)
    patternPeak = line.new(showProjections ? troughBarIndex : na, showProjections ? peak : na, showProjections ? bar_index : na, 
     showProjections ? peak : na, color = color.green, style = line.style_dashed)
    patternTrough = line.new(showProjections ? troughBarIndex : na, showProjections ? trough : na, showProjections ? bar_index : na, 
     showProjections ? trough : na, color = color.red, style = line.style_dashed)
    patternUpperProjection = line.new(showProjections ? troughBarIndex : na, showProjections ? peak + (shPriceTwo - slPriceTwo) : na, showProjections ? bar_index : na, 
     showProjections ? peak + (shPriceTwo - slPriceTwo) : na, color = color.green, style = line.style_dashed)
    patternLowerProjection = line.new(showProjections ? troughBarIndex : na, showProjections ? trough - (shPriceTwo - slPriceTwo) : na, showProjections ? bar_index : na, 
     showProjections ? trough - (shPriceTwo - slPriceTwo) : na, color = color.red, style = line.style_dashed)
    var myLineArray = array.new_line()
    array.push(myLineArray, lineOne) 
    array.push(myLineArray, lineTwo) 
    array.push(myLineArray, lineThree) 
    array.push(myLineArray, lineFour)
    array.push(myLineArray, lineFive) 
    array.push(myLineArray, lineSix) 
    array.push(myLineArray, lineSeven)
    array.push(myLineArray, lineEight)
    array.push(myLineArray, lineNine)
    array.push(myLineArray, patternPeak)
    array.push(myLineArray, patternTrough) 
    array.push(myLineArray, patternUpperProjection)
    array.push(myLineArray, patternLowerProjection)
    if array.size(myLineArray) >= 500
        firstLine = array.remove(myLineArray, 0) 
        line.delete(firstLine)
    var myLabelArray = array.new_label()
    array.push(myLabelArray, labelOne)
    array.push(myLabelArray, labelTwo)
    array.push(myLabelArray, labelThree)
    array.push(myLabelArray, labelFour) 
    array.push(myLabelArray, labelFive)
    array.push(myLabelArray, labelSix) 
    if array.size(myLabelArray) >= 250
        firstLabel = array.remove(myLabelArray, 0) 
        label.delete(firstLabel)

if bearishThreeDrive  
    line.set_xy1(currentPatternPeak, showProjections ? troughBarIndex : na, showProjections ? peak : na)
    line.set_xy2(currentPatternPeak, showProjections ? bar_index : na, showProjections ? peak : na)
    line.set_xy1(currentPatternTrough, showProjections ? troughBarIndex : na, showProjections ? trough : na)
    line.set_xy2(currentPatternTrough, showProjections ? bar_index : na, showProjections ? trough : na)
    line.set_xy1(currentPatternUpperProjection, showProjections ? troughBarIndex : na, showProjections ? peak + (shPriceTwo - slPriceTwo) : na)
    line.set_xy2(currentPatternUpperProjection, showProjections ? bar_index : na, showProjections ? peak + (shPriceTwo - slPriceTwo) : na)
    line.set_xy1(currentPatternLowerProjection, showProjections ? troughBarIndex : na, showProjections ? trough - (shPriceTwo - slPriceTwo) : na)
    line.set_xy2(currentPatternLowerProjection, showProjections ? bar_index : na, showProjections ? trough - (shPriceTwo - slPriceTwo) : na)
    alert('Bearish Three-Drive')
